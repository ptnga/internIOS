disabled_rules: # rule identifiers to exclude from running
  # - colon
  # - comma
  - control_statement
  - todo
  - trailing_whitespace
  - force_cast
opt_in_rules: # some rules are only opt-in
  - empty_count
  - function_default_parameter_at_end
  - redundant_type_annotation
  - closure_body_length
  - closure_spacing
  # Find all the available rules by running:
  # swiftlint rules
excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Carthage
  - Pods
  - Scripts
  - R.generated.swift # Exclude generated file support strong type resource
  - OrderAHeadTests
  - OrderAHead/Factories
  - OrderAHead/Support/Extensions
analyzer_rules: # Rules run by `swiftlint analyze` (experimental)
  - explicit_self

# If true, SwiftLint will not fail if no lintable files are found.
allow_zero_lintable_files: false

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_cast: warning # implicitly
force_try:
  severity: error # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
line_length: 150
# they can set both implicitly with an array
type_body_length:
  - 300 # warning
  - 400 # error
# or they can set both explicitly
file_length:
  warning: 500
  error: 1200
function_body_length:
  warning: 80
  error: 100
closure_body_length:
  warning: 50
  error: 75
cyclomatic_complexity:
  - 13 # warning
  - 15 # error
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  min_length: 4 # only warning
  max_length: # warning and error
    warning: 40
    error: 50
  excluded: iPhone # excluded via string
identifier_name:
  min_length: # only min_length
    error: 3 # only error
  excluded: # excluded via string array
    - id
    - URL
    - GlobalAPIKey
reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, junit, html, emoji, sonarqube, markdown)
